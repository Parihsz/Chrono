option ClientOutput = "./Events/Client"
option ServerOutput = "./Events/Server"
option RemoteScope = "CHRONO"

struct Transform {
    Position: vector<f32>,
    RotationY: f16,
}

event ClientReplicateCFrame {
    from: Client,
    type: Unreliable,
    call: SingleSync,
    data: struct {
        timestamp: f32,
        cframe: Transform
    }
}

event ServerReplicateCFrame {
    from: Server,
    type: Unreliable,
    call: SingleSync,
    data: struct {
        timestamps: map {[u16]: f32},
        cframes: map {[u16]: Transform},
    }
}

event TickRateChanged {
    from: Server,
    type: Reliable,
    call: SingleSync,
    data: struct {
        id: u16,
        tickRate: f32,
    }
}

event TogglePlayerReplication {
    from: Server,
    type: Reliable,
    call: SingleSync,
    data: struct {
        id: u16,
        on: boolean,
    }
}

event InitializePlayer {
    from: Server,
    type: Reliable,
    call: ManyAsync,
    data: struct {
        id: u16,
        player: string,
    }
}

event InitializeExistingPlayers {
    from: Server,
    type: Reliable,
    call: ManyAsync,
    data: struct {
        id: u16,
        player: string,
    }[]
}
